services:
  time-series-commands:
    image: ${IMAGE_NAME:-registry.gitlab.com/redmic-project/server/time-series}:${IMAGE_TAG:-latest}
    environment:
      MICROSERVICE_NAME: ${UNIT_NAME}-commands
      MICROSERVICE_PORT:
      SERVER_PORT: ${MICROSERVICE_PORT}
      OAUTH_CLIENT_ID:
      OAUTH_CLIENT_SECRET:
      SPRING_KAFKA_CLIENT_ID:
      JAVA_OPTS:
    networks:
      redmic-net:
      kafka-net:
      metric-net:
      traefik-net:
    volumes:
      - commands-vol:/tmp/kafka
    healthcheck:
      test: wget --spider -q http://localhost:${MICROSERVICE_PORT}/api/${UNIT_NAME}/commands/actuator/health
      interval: ${TIME_SERIES_COMMANDS_HEALTHCHECK_INTERVAL:-30s}
      timeout: ${TIME_SERIES_COMMANDS_HEALTHCHECK_TIMEOUT:-10s}
      retries: ${TIME_SERIES_COMMANDS_HEALTHCHECK_RETRIES:-5}
      start_period: ${TIME_SERIES_COMMANDS_HEALTHCHECK_START_PERIOD:-2m}
    deploy:
      mode: replicated
      replicas: ${TIME_SERIES_COMMANDS_REPLICAS:-1}
      restart_policy:
        delay: ${TIME_SERIES_COMMANDS_RESTART_DELAY:-15s}
      update_config:
        delay: ${TIME_SERIES_COMMANDS_UPDATE_DELAY:-5m}
      labels:
        traefik.enable: ${TRAEFIK_ENABLE}
        traefik.http.routers.time-series-commands.entrypoints: ${TRAEFIK_ENTRYPOINT}
        traefik.http.routers.time-series-commands.rule: (Host(`${PUBLIC_HOSTNAME}`) || Host(`${TRAEFIK_SUBDOMAIN}.${PUBLIC_HOSTNAME}`)) && PathPrefix(`/api/${UNIT_NAME}/commands`)
        traefik.http.services.time-series-commands.loadbalancer.server.port: ${MICROSERVICE_PORT}
      resources:
        limits:
          cpus: '${TIME_SERIES_COMMANDS_RESOURCES_LIMITS_CPUS:-1}'
          memory: ${TIME_SERIES_COMMANDS_RESOURCES_LIMITS_MEMORY:-1G}
        reservations:
          cpus: '${TIME_SERIES_COMMANDS_RESOURCES_RESERVATIONS_CPUS:-0.001}'
          memory: ${TIME_SERIES_COMMANDS_RESOURCES_RESERVATIONS_MEMORY:-820M}

networks:
  redmic-net:
    name: ${REDMIC_NET_NAME:-redmic-net}
    driver: ${REDMIC_NET_DRIVER:-overlay}
    external: true

  kafka-net:
    name: ${KAFKA_NET_NAME:-kafka-net}
    driver: ${KAFKA_NET_DRIVER:-overlay}
    external: true

  metric-net:
    name: ${METRIC_NET_NAME:-metric-net}
    driver: ${METRIC_NET_DRIVER:-overlay}
    external: true

  traefik-net:
    name: ${TRAEFIK_NET_NAME:-traefik-net}
    driver: ${TRAEFIK_NET_DRIVER:-overlay}
    external: true

